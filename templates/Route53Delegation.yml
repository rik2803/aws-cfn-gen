Description: |
  Create all resources required to allow specified accounts to manage Route53 Resource Records in {{ item.hostedzone.domain }} (aws-cfn-gen version: {{ gittag | default('na') }})

Resources:
            
  CreateRoute53CNAME:
    Type: AWS::Lambda::Function
    Properties:
      Handler: "CreateOrUpdateRoute53RecordSet.lambda_handler"
      Role: !GetAtt CreateRoute53CNAMERole.Arn
      Runtime: "{{ item.lambda_runtime | default('python3.12') }}"
      Timeout: "{{ item.lambda_timeout | default('10') }}"
      Environment:
        Variables:
          HOSTEDZONE_ID: "{{ item.hostedzone.id }}"
      Code:
        S3Bucket: "{{ lambda_function_bucket_name }}"
        S3Key: "{{ item.lambda_s3_key | default('aws-lambda-create-or-update-route53-recordset-0e51245bd9b8e759c81f1dc2f1b34788c7117f2f.zip') }}"

  CreateRoute53CNAMERole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: "/"
      ManagedPolicyArns: 
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: Route53ChangeResourceRecordSets
          PolicyDocument:
            Version: 2012-10-17
            Statement:
            - Effect: Allow
              Action:
              - route53:ChangeResourceRecordSets
              - route53:ListResourceRecordSets
              Resource: "arn:aws:route53:::hostedzone/*"
        - PolicyName: DynamoDBReadWriteR53CustomResourceInentoryTable
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:ListTables
                Resource: "*"
              - Effect: Allow
                Action:
                  - dynamodb:BatchGetItem
                  - dynamodb:BatchWriteItem
                  - dynamodb:DeleteItem
                  - dynamodb:UpdateItem
                  - dynamodb:GetItem
                Resource: !Sub "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/{{ route53_delegation_dynamodb_tablename }}"

  RequestRoute53CNAMEKmsKey:
    Type: AWS::KMS::Key
    Properties:
      Description: "KMS Key for R53 Delegation Topic for domain {{ item.hostedzone.domain }}"
      EnableKeyRotation: false
      PendingWindowInDays: 30
      KeyPolicy:
        Version: 2012-10-17
        Id: key-default-1
        Statement:
          - Sid: Allow use of the key
            Effect: Allow
            Principal:
              AWS: [ "{{ item.allowed_accounts | json_query('[*].account_id')  | join('", "') }}" ]
            Action:
              - 'kms:DescribeKey'
              - 'kms:Encrypt'
              - 'kms:Decrypt'
              - 'kms:ReEncrypt*'
              - 'kms:GenerateDataKey'
              - 'kms:GenerateDataKeyWithoutPlaintext'
            Resource: '*'

  RequestRoute53CNAME:
    Type: AWS::SNS::Topic
    Properties:
      Subscription: 
        - Endpoint: 
            !GetAtt CreateRoute53CNAME.Arn
          Protocol: lambda
      TopicName: "RequestRoute53CNAME{{ item.hostedzone.id }}"
      KmsMasterKeyId: !GetAtt RequestRoute53CNAMEKmsKey.KeyId


  RequestRoute53CNAMEPolicy:
    Type: AWS::SNS::TopicPolicy
    Properties:
      Topics:
      - !Ref RequestRoute53CNAME
      PolicyDocument: 
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Principal: 
            AWS: [ "{{ item.allowed_accounts | json_query('[*].account_id')  | join('", "') }}" ]
          Action: 
          - sns:Publish
          Resource: !Ref RequestRoute53CNAME


  LambdaInvokePermission: 
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      Principal: sns.amazonaws.com
      SourceArn: !Ref RequestRoute53CNAME
      FunctionName: !GetAtt CreateRoute53CNAME.Arn

  CreateRoute53CNAMECLIRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              AWS: [ "{{ item.allowed_accounts | json_query('[*].account_id')  | join('", "') }}" ]
            Action: sts:AssumeRole
            Condition: {}
      Path: "/"
      Policies:
      - PolicyName: "Route53ChangeResourceRecordSetsCLI{{ item.hostedzone.id }}"
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Action:
                - route53:GetHostedZone
                - route53:ListResourceRecordSets
                - route53:ChangeResourceRecordSets
              Effect: Allow
              Resource: "arn:aws:route53:::hostedzone/{{ item.hostedzone.id }}"
            - Action:
                - route53:ListHostedZones
              Effect: Allow
              Resource: "*"
      
Outputs:
  ServiceToken:  
    Description: The arn of SNS Topic used to request a CNAME record. Share this with the subaccounts authorized to create resource records.
    Value: !Ref RequestRoute53CNAME

