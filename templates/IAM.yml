AWSTemplateFormatVersion: "2010-09-09"
Description: |
  Create IAM Resource for project {{ cfn_project }} (aws-cfn-gen version: {{ gittag | default('na') }})

Resources:

  ECSExecutionRoleAwsCfnGen:
    Type: AWS::IAM::Role
    Properties:
      RoleName: ECSExecutionRoleAwsCfnGen
      AssumeRolePolicyDocument:
        {"Version": "2012-10-17", "Statement": [{"Sid": "", "Effect": "Allow", "Principal": {"Service": "ecs-tasks.amazonaws.com"}, "Action": "sts:AssumeRole", "Condition": { "StringEquals": { "aws:SourceAccount": "{{ target_account.account_id }}" } } }]}
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy

{% if managed_policies is defined %}
{%   for policy in managed_policies | default([]) %}
  {{ policy.name }}Policy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: {{ policy.name }}
      Description: "Managed policy {{ policy.name }} for {{ cfn_project }}"
      PolicyDocument:
        {{ policy.policy_document | to_json }}

{%   endfor %}
{% endif %}

{% if awsroles is defined %}
{%   for awsrole in awsroles | default([]) %}
  {{ awsrole.name }}Role:
{%     if managed_policies is defined %}
    DependsOn:
{%       for policy in managed_policies %}
      - {{ policy.name }}Policy
{%       endfor %}
{%     endif %}
    Type: AWS::IAM::Role
    Properties:
      RoleName: {{ awsrole.name }}
      AssumeRolePolicyDocument:
        {{ awsrole.assumerole_policy_document | to_json }}
      ManagedPolicyArns:
{%     for policyarn in awsrole.policy_arns %}
{%       if 'arn:aws:iam' in policyarn %}
        - {{ policyarn }}
{%       else %}
        - !Sub 'arn:aws:iam::${AWS::AccountId}:policy/{{ policyarn }}'
{%       endif %}
{%     endfor %}
{%   endfor %}
{% endif %}

{% if iam_users is defined %}
{%   for iam_user in iam_users | default([]) %}
  {{ iam_user.cfn_name | default('A_BUG') }}:
    Type: AWS::IAM::User
    DependsOn:
{%     for policy in managed_policies %}
      - {{ policy.name }}Policy
{%     endfor %}
    Properties:
      UserName: {{ iam_user.name }}
{%     if iam_user.managed_policies is defined %}
      ManagedPolicyArns:
{%       for policy in iam_user.managed_policies %}
{%         if 'arn:aws:iam' in policy %}
        - {{ policy }}
{%         else %}
        - !Sub 'arn:aws:iam::${AWS::AccountId}:policy/{{ policy }}'
{%         endif %}
{%       endfor %}
{%     endif %}

{%     if iam_user.create_accesskeys is defined and iam_user.create_accesskeys %}
  Key{{ iam_user.cfn_name | default('A_BUG') }}:
    Type: AWS::IAM::AccessKey
    Properties:
      UserName:
        !Ref {{ iam_user.cfn_name | default('A_BUG') }}
{%       if iam_accesskey_serial is defined %}
      Serial: {{ iam_accesskey_serial }}
{%       endif %}
  ParameterStoreAccessKey{{ iam_user.cfn_name | default('A_BUG') }}:
    Type: AWS::SSM::Parameter
    Properties:
      Name: "/{{ organization.cfn_name }}/aws-cfn-gen/iam/{{ iam_user.cfn_name | default('A_BUG') }}/accesskey"
      Type: String
      Value: !Ref Key{{ iam_user.cfn_name | default('A_BUG') }}
  ParameterStoreSecretKey{{ iam_user.cfn_name | default('A_BUG') }}:
    Type: AWS::SSM::Parameter
    Properties:
      Name: "/{{ organization.cfn_name }}/aws-cfn-gen/iam/{{ iam_user.cfn_name | default('A_BUG') }}/secretkey"
      Type: String
      Value: !GetAtt Key{{ iam_user.cfn_name | default('A_BUG') }}.SecretAccessKey
{%     endif %}
{%   endfor %}
{% endif %}

Outputs:
  Dummy:
    Value: dummy
{% if iam_users is defined %}
{%   for iam_user in iam_users | default([]) %}
{%     if iam_user.create_accesskeys is defined and iam_user.create_accesskeys %}
  AccessKeyParameterStoreName{{ iam_user.cfn_name | default('A_BUG') }}:
    Value: !Ref ParameterStoreAccessKey{{ iam_user.cfn_name | default('A_BUG') }}
  SecretKeyParameterStoreName{{ iam_user.cfn_name | default('A_BUG') }}:
    Value: !Ref ParameterStoreSecretKey{{ iam_user.cfn_name | default('A_BUG') }}
{%     endif %}
{%   endfor %}
{% endif %}
